name: generate animation

on:
  # 每12小时自动运行
  schedule:
    - cron: "0 */12 * * *"

  # 允许随时手动运行该任务
  workflow_dispatch:

  # 在主分支上的每次推送时运行
  push:
    branches:
      - main

jobs:
  generate:
    permissions: 
      contents: write
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      # 从 GitHub 用户 (<github_user_name>) 的贡献图生成贪吃蛇游戏，输出 SVG 动画到 <svg_out_path>
      - name: generate github-contribution-grid-snake.svg
        uses: Platane/snk@v3.2.0
        with:
          # 从中读取贡献图的 GitHub 用户名（**必填**）
          # 使用操作上下文变量 `github.repository_owner` 或指定用户
          github_user_name: ${{ github.repository_owner }}
      
          # 要生成的文件列表。
          # 每行一个文件。每个输出可以通过查询字符串进行自定义。
          # 支持的选项：
          # - palette: 颜色预设，选择 [github, github-dark, github-light] 中的一种
          # - color_snake: 蛇的颜色
          # - color_dots: 用逗号分隔的点颜色列表。
          # 第一个是0贡献，然后从低贡献到最高贡献依次排列。
          # 预计有正好5种颜色。
          outputs: |
            dist/github-snake.svg
            dist/github-snake-dark.svg?palette=github-dark
            dist/ocean.gif?color_snake=orange&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9
        env:
          # 需要一个 GitHub 令牌才能从 GitHub API 获取贡献日历。
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 将<build_dir>的内容推送到一个分支
      # 内容将在https://raw.githubusercontent.com/<github_user>/<repository>/<target_branch>/<file>上可用，或作为GitHub页面提供
      - name: push github-contribution-grid-snake.svg to the output branch
        uses: crazy-max/ghaction-github-pages@v4.0.0
        with:
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
